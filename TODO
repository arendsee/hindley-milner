# features for v0.1.0

* required for current morloc compatibility
 [x] records
 [x] language-specific source
        `source <lang> from <file> (<import-list>)`
 [x] allow scientific numbers
 [x] allow quotation of type names (needed for realizations)
 [x] allow comments
 [x] allow reading from files (in app)
 [x] add label syntax in type signatures (parse, but ignore)
 [ ] read code from files using a given function of type
        `fileReader :: Filename -> IO Text`
     This function both finds the file (searching locally or across databases)
     and opens the file.
 [ ] transform expressions into a graph of Manifold objects
 [ ] manage serialization
 [ ] write `realize` function

* documentation
 [ ] update rules in docs
     [ ] context handling across modules (import/export semantics)
     [ ] realizations
     [ ] rules for merging signatures
     [ ] source code
 [ ] describe the entire typechecking algorithm in writing, especially hacky
     steps like sorting the expressions 
 [ ] more reading and flesh out the bibliography
 [ ] add module documentation
 [ ] extend README
 [ ] write haddock comments for every function


# features for v0.2.0

* core features
 [ ] add label semantics in type signatures
 [ ] add module namespaces
 [ ] record access
 [ ] add algebraic types
 [ ] manage typecasting
 [ ] eta reduction
 [ ] functional composition syntax
 [ ] functional parameterization
 [ ] whitespace delimiting
 [ ] docstrings
 [ ] module comments (replace the external yaml files)

* Error messages
 [ ] Thread the TypeError object through megaparsec 
 [ ] Add custom erorrs for issues like not quoting language names
 [ ] Write tests that trigger every possible error and ensure they all have
     proper messages

* QC coverage
 [ ] generate realization type signatures
 [ ] generate record types
 [ ] generate record expressions
 [ ] generate modules
 [ ] generate import/export
 [ ] generate scientific numbers

* performance
 [ ] generate large code examples (~50K LOC)
 [ ] add benchmarking
